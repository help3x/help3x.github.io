{"version":3,"file":"static/webpack/static\\development\\pages\\post.js.9e188fc2f35fd3d678e2.hot-update.js","sources":["webpack:///./pages/post.js"],"sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport Link from 'next/link';\nimport getConfig from 'next/config'\nimport { withRouter, } from 'next/router'\n\nimport Page from '../layouts/main'\n\n\nconst ContentBase = props => {\n  let datePublishedToDsiplay = \"\";\n  if (props.pageContent.datePublished) {\n    if (props.pageContent.datePublished.getFullYear) {\n      datePublishedToDsiplay = `${props.pageContent.datePublished.getFullYear()}.${(\"00\" + props.pageContent.datePublished.getMonth() + 1).slice(-2)}.${(\"00\" + props.pageContent.datePublished.getDate()).slice(-2)}`;\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>{ props.pageContent.title } &#x007c; { props.siteName }</title>\n        <meta name=\"description\" content={ props.pageContent.description } />\n      </Head>\n      <article className=\"p2 md-pt3 md-px3 bg-white\">\n        <header className=\"article-header pb3\">\n          <h1 className=\"\">{ props.pageContent.title }</h1>\n          <div className=\"flex flex-wrap\">\n            <div>{/*<span className=\"pr1\">投稿日:</span>*/}<time className=\"\" dateTime={ props.pageContent.datePublished }>{ datePublishedToDsiplay }</time></div>\n          </div>\n        </header>\n        <div dangerouslySetInnerHTML={{ __html: props.pageContent.body }} />\n      </article>\n      <style jsx>{`\n      `}</style>\n    </React.Fragment>\n  );\n};\n\n\n// 子コンポーネントでは使えないらしい ... ドキュメントに記載あり。\nContentBase.getInitialProps = async (props) => {\n  console.log(\"ContentBase getInitialProps\", props);\n  return { };\n};\n\n\nconst Content = withRouter(ContentBase);\n\n\nconst Post = props => {\n  const { publicRuntimeConfig, } = getConfig();\n\n  return (\n    <Page>\n      <Content\n        pageContent={ props.pageContent }\n        { ...publicRuntimeConfig } />\n    </Page>\n  );\n};\n\nPost.getInitialProps = async (props) => {\n  console.log(\"Post getInitialProps\", props);\n  // クエリパラメータから記事のIDを割り出す\n  const { id } = props.query;\n  const postId = (id || \"\").substr(0, 1) === \"/\" ? id.substr(1) : (id || \"\");\n\n  // 記事の内容を取得する\n  const data = {\n    pageContent: {},\n  };\n\n  const pageContent = data.pageContent;\n  if (postId === \"1st\") {\n    pageContent.datePublished = new Date(2019, 0, 7, 15, 34);\n    pageContent.title = \"String.prototype.substring()\";\n    pageContent.body = \"<p><strong><code>substring()</code></strong>メソッドは、0 インデックスやそのほか、または文字列の最後までの String オブジェクトの部分集合を返します。</p>\";\n  } else if (postId === \"2nd\") {\n    pageContent.datePublished = new Date(2019, 0, 15, 16, 39);\n    pageContent.title = \"String.prototype.codePointAt()\";\n    pageContent.body = \"<p><strong><code>codePointAt()</code></strong>メソッドは、Unicode ポイント値である負でない整数を返します。</p>\";\n  } else if (postId === \"3rd\") {\n    pageContent.datePublished = new Date(2019, 0, 21, 7, 4, 58);\n    pageContent.title = \"[CSS3] ボックスに影をつける box-shadow プロパティ\";\n    pageContent.body = \"<h2>概要</h2><p><code>box-shadow</code>プロパティは、ボックスに1つまたは複数の影をつけるときに使います。<code>box-shadow</code>プロパティでは、たとえば以下のように影を指定します。</p><h2>コードサンプル</h2><p><code>box-shadow: 10px 10px;</code></p><h3>補足説明</h3><p>影は２～４つの長さの値で定義されますが、任意で色、insetキーワードを指定することもできます。 insetキーワードを付けると、影がボックスの外側ではなく内側につくようになります。 長さの指定を省略すると0となり、色の指定を省略するとユーザーエージェントが選んだ色になります。 複数の影を指定する場合には、カンマ（ , ）区切りで影のリストを複数指定します。</p><p>影を定義する指定内容は、以下のように解釈されます。</p><ul><li>•１番目の長さの値は、水平方向の影のオフセット距離です。正の値を指定すると右へ、負の値を指定すると左へ影が移動します。</li><li>•２番目の長さの値は、垂直方向の影のオフセット距離です。正の値を指定すると下へ、負の値を指定すると上へ影が移動します。</li><li>：</li></ul>\";\n  }\n\n  return data;\n};\n\nexport default Post;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA4BA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}